using Moongazing.Cruno.Worker.Services.Handlers.Common;
using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;
using System.Text.Json;

namespace Moongazing.Cruno.Worker.Services.Handlers;

public class GeneratePdfJobHandler : IJobHandler
{
    private readonly ILogger<GeneratePdfJobHandler> _logger;

    public GeneratePdfJobHandler(ILogger<GeneratePdfJobHandler> logger)
    {
        _logger = logger;
    }

    public string Action => "generate-pdf";

    public async Task HandleAsync(JsonElement data)
    {
        string? title = data.GetProperty("title").GetString();
        string? content = data.GetProperty("content").GetString();
        string? outputPath = data.GetProperty("outputPath").GetString();

        if (string.IsNullOrWhiteSpace(outputPath))
            throw new InvalidOperationException("Output path is required.");

        _logger.LogInformation("Generating PDF: {Title} → {Output}", title, outputPath);

        var document = Document.Create(container =>
        {
            container.Page(page =>
            {
                page.Size(PageSizes.A4);
                page.Margin(2, Unit.Centimetre);
                page.PageColor(Colors.White);
                page.DefaultTextStyle(x => x.FontSize(14));

                page.Header().Text(title).SemiBold().FontSize(18).FontColor(Colors.Blue.Darken2);
                page.Content().Text(content);
                page.Footer().AlignCenter().Text($"Generated by Cruno - {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
            });
        });

        Directory.CreateDirectory(Path.GetDirectoryName(outputPath)!);
        document.GeneratePdf(outputPath);

        _logger.LogInformation("PDF generated successfully: {Path}", outputPath);

        await Task.CompletedTask;
    }
}